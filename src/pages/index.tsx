import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { uniqBy } from "ramda";

import InfiniteCards from "../components/InfiniteCards";
import Noise from "../components/Noise";
import { useGetLikedTracksQuery } from "../utils/useGetLikedTracksQuery";
import { useGetListenedTracksQuery } from "../utils/useGetListenedTracksQuery";

export default function Home() {
  const { data: session } = useSession();
  const { data: listenedTracks, isLoadingListened } =
    useGetListenedTracksQuery();
  const { data: likedTracks, isLoadingLiked } = useGetLikedTracksQuery();

  const seedTracks = uniqBy((x) => x?.id, listenedTracks.concat(likedTracks));

  // #585273
  // #8e88a1
  // #8f83d8
  // #e3e1e4
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Noise />

      <main className="min-h-screen overflow-hidden bg-gradient-to-b from-[#504A6D] to-[#393359]  ">
        {!session ? (
          <>
            {" "}
            Not signed in <br />{" "}
            <button onClick={() => signIn()}>Sign in</button>{" "}
          </>
        ) : (
          <div className="text-white">
            Signed in as {session?.user.email} <br />
            <button onClick={() => signOut()}>Sign out</button>{" "}
            {isLoadingLiked || isLoadingListened ? (
              <>Loading</>
            ) : (
              <InfiniteCards tracks={seedTracks} />
            )}
          </div>
        )}
      </main>
    </>
  );
}

// export default Home;
